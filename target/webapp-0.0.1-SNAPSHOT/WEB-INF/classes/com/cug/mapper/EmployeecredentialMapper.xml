<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cug.mapper.EmployeecredentialMapper" >
  <resultMap id="BaseResultMap" type="com.cug.po.Employeecredential" >
    <id column="idCard" property="idcard" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="workType" property="worktype" jdbcType="VARCHAR" />
    <result column="credentialNumber" property="credentialnumber" jdbcType="VARCHAR" />
    <result column="credentialFilePath" property="credentialfilepath" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    idCard, name, workType, credentialNumber, credentialFilePath
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cug.po.EmployeecredentialExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employeecredential
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from employeecredential
    where idCard = #{idcard,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from employeecredential
    where idCard = #{idcard,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cug.po.EmployeecredentialExample" >
    delete from employeecredential
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cug.po.Employeecredential" >
    insert into employeecredential (idCard, name, workType, 
      credentialNumber, credentialFilePath)
    values (#{idcard,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{worktype,jdbcType=VARCHAR}, 
      #{credentialnumber,jdbcType=VARCHAR}, #{credentialfilepath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cug.po.Employeecredential" >
    insert into employeecredential
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idcard != null" >
        idCard,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="worktype != null" >
        workType,
      </if>
      <if test="credentialnumber != null" >
        credentialNumber,
      </if>
      <if test="credentialfilepath != null" >
        credentialFilePath,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idcard != null" >
        #{idcard,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="worktype != null" >
        #{worktype,jdbcType=VARCHAR},
      </if>
      <if test="credentialnumber != null" >
        #{credentialnumber,jdbcType=VARCHAR},
      </if>
      <if test="credentialfilepath != null" >
        #{credentialfilepath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cug.po.EmployeecredentialExample" resultType="java.lang.Integer" >
    select count(*) from employeecredential
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employeecredential
    <set >
      <if test="record.idcard != null" >
        idCard = #{record.idcard,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.worktype != null" >
        workType = #{record.worktype,jdbcType=VARCHAR},
      </if>
      <if test="record.credentialnumber != null" >
        credentialNumber = #{record.credentialnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.credentialfilepath != null" >
        credentialFilePath = #{record.credentialfilepath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employeecredential
    set idCard = #{record.idcard,jdbcType=CHAR},
      name = #{record.name,jdbcType=VARCHAR},
      workType = #{record.worktype,jdbcType=VARCHAR},
      credentialNumber = #{record.credentialnumber,jdbcType=VARCHAR},
      credentialFilePath = #{record.credentialfilepath,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cug.po.Employeecredential" >
    update employeecredential
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="worktype != null" >
        workType = #{worktype,jdbcType=VARCHAR},
      </if>
      <if test="credentialnumber != null" >
        credentialNumber = #{credentialnumber,jdbcType=VARCHAR},
      </if>
      <if test="credentialfilepath != null" >
        credentialFilePath = #{credentialfilepath,jdbcType=VARCHAR},
      </if>
    </set>
    where idCard = #{idcard,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cug.po.Employeecredential" >
    update employeecredential
    set name = #{name,jdbcType=VARCHAR},
      workType = #{worktype,jdbcType=VARCHAR},
      credentialNumber = #{credentialnumber,jdbcType=VARCHAR},
      credentialFilePath = #{credentialfilepath,jdbcType=VARCHAR}
    where idCard = #{idcard,jdbcType=CHAR}
  </update>
</mapper>